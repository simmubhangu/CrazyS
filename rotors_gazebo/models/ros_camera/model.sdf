<?xml version="1.0" ?>
<sdf version="1.5">
	<model name="overhead_camera">
		<!-- <pose>0 0 0.05 0 0 0</pose>
		<link name="link">
			<inertial>
				<mass>0.1</mass>
				<inertia>
					<ixx>0.000166667</ixx>
					<iyy>0.000166667</iyy>
					<izz>0.000166667</izz>
				</inertia>
			</inertial>
			<collision name="collision">
				<geometry>
					<box>
						<size>0.1 0.1 0.1</size>
					</box>
				</geometry>
			</collision>
			<visual name="visual">
				<geometry>
					<box>
						<size>0.1 0.1 0.1</size>
					</box>
				</geometry>
			</visual>
			<sensor name="camera" type="camera">
				<camera>
					<horizontal_fov>1.047</horizontal_fov>
					<image>
						<width>320</width>
						<height>240</height>
					</image>
					<clip>
						<near>0.1</near>
						<far>100</far>
					</clip>
				</camera>
				<always_on>1</always_on>
				<update_rate>30</update_rate>
				<visualize>true</visualize>
			</sensor>
		</link> -->


		<!-- camera plugin --> <!-- not working -->
		<!-- <gazebo reference="link">
			<sensor type="camera" name="camera1">
				<update_rate>30.0</update_rate>
				<camera name="head">
					<horizontal_fov>1.3962634</horizontal_fov>
					<image>
						<width>320</width>
						<height>240</height>
						<format>R8G8B8</format>
					</image>
					<clip>
						<near>0.02</near>
						<far>300</far>
					</clip>
					<noise>
						<type>gaussian</type> -->
					<!-- Noise is sampled independently per pixel on each frame.
							 That pixel's noise value is added to each of its color
							 channels, which at that point lie in the range [0,1]. -->
							<!--  <mean>0.0</mean>
							 <stddev>0.007</stddev>
						 </noise>
					 </camera>
					 <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
						<alwaysOn>true</alwaysOn>
						<updateRate>0.0</updateRate>
						<cameraName>/camera1</cameraName>
						<imageTopicName>image_raw</imageTopicName>
						<cameraInfoTopicName>camera_info</cameraInfoTopicName>
						<frameName>camera_link</frameName>
						<hackBaseline>0.07</hackBaseline>
						<distortionK1>0.0</distortionK1>
						<distortionK2>0.0</distortionK2>
						<distortionK3>0.0</distortionK3>
						<distortionT1>0.0</distortionT1>
						<distortionT2>0.0</distortionT2>
					</plugin>
				</sensor>
			</gazebo> -->
			<link name='camera_link'>
        <pose>0 0 10.1 0 1.57 0</pose>
        <inertial>
          <mass>0.1</mass>
          <inertia>
            <ixx>1</ixx>
            <ixy>0</ixy>
            <ixz>0</ixz>
            <iyy>1</iyy>
            <iyz>0</iyz>
            <izz>1</izz>
          </inertia>
        </inertial>
        <collision name='collision'>
          <geometry>
            <box>
              <size>0.1 0.1 0.1</size>
            </box>
          </geometry>
          <max_contacts>10</max_contacts>
          <surface>
            <bounce/>
            <friction>
              <ode/>
            </friction>
            <contact>
              <ode/>
            </contact>
          </surface>
        </collision>
        <visual name='visual'>
          <geometry>
            <box>
              <size>0.1 0.1 0.1</size>
            </box>
          </geometry>
        </visual>
        <sensor name='camera' type='camera'>
          <camera name='main_camera'>
            <horizontal_fov>1.047</horizontal_fov>
            <image>
              <width>640</width>
              <height>480</height>
            </image>
            <clip>
              <near>0.1</near>
              <far>100</far>
            </clip>
           
          </camera>
          <plugin name='camera_control' filename='libgazebo_ros_camera.so'>
            <cameraName>/main_camera</cameraName>
            <alwaysOn>true</alwaysOn>
            <updateRate>60</updateRate>
            <imageTopicName>/main/image_raw</imageTopicName>
            <cameraInfoTopicName>/main/camera_info</cameraInfoTopicName>
            <frameName>main_camera</frameName>
          </plugin>

          <always_on>1</always_on>
          <update_rate>30</update_rate>
          <visualize>0</visualize>
        </sensor>
        <velocity_decay>
          <linear>0</linear>
          <angular>0</angular>
        </velocity_decay>
        <self_collide>0</self_collide>
        <kinematic>0</kinematic>
        <gravity>1</gravity>
      </link>
      
	</model>
</sdf>
